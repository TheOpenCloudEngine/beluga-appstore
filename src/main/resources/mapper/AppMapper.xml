<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.opencloudengine.garuda.belugaservice.db.mapper.AppMapper">

    <select id="listAll" resultType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        select A.*, O.name as orgName from
        (select * from apps where currentUse = 'Y') A
        join organization O
        on A.orgId = O.id;
    </select>

    <select id="listByOrganization" parameterType="map"
            resultType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        select A.*, O.name as orgName from
        (select * from apps where currentUse = 'Y') A
        join organization O
        on A.orgId = O.id
        where A.orgId = #{orgId}
    </select>

    <select id="listByAppId" parameterType="map"
            resultType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        select A.*, O.name as orgName from apps A
        join organization O
        on A.orgId = O.id
        where A.id = #{id}
        order by A.version desc;
    </select>

    <select id="select" parameterType="map" resultType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        select A.*, O.name as orgName from apps A
        join organization O
        on A.orgId = O.id
        where A.id = #{id} and A.version = #{version}
    </select>

    <select id="selectMaxVersion" parameterType="map" resultType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        select A.*
        from (select * from apps where id = #{id}) A
        inner join (
            select id, max(version) version
            from apps
            where id = #{id}
            group by id
        ) B on A.id = B.id and A.version = B.version;
    </select>

    <insert id="insert" parameterType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        INSERT INTO apps(
            `id`, orgId, currentUse ,version, `name`, description, appContext, appFile, appFilePath, appFileLength, appFileDate, appFileChecksum
            , appContext2, appFile2, appFilePath2, appFileLength2, appFileDate2, appFileChecksum2, appFileUpdated
            , environment, cpus, memory, `scale`, resources, envs, autoScaleConf, updateDate
        ) VALUES(
            #{id}, #{orgId},#{currentUse}, #{version}, #{name}, #{description}, #{appContext}, #{appFile}, #{appFilePath}, #{appFileLength}, #{appFileDate}, #{appFileChecksum}
            , #{appContext2}, #{appFile2}, #{appFilePath2}, #{appFileLength2}, #{appFileDate2}, #{appFileChecksum2}, 'Y'
            , #{environment}, #{cpus}, #{memory}, #{scale}, #{resources}, #{envs}, #{autoScaleConf}, CURRENT_TIMESTAMP
        )
    </insert>

    <update id="update" parameterType="org.opencloudengine.garuda.belugaservice.db.entity.App">
        UPDATE apps
        SET `name`=#{name},
            description=#{description},
            appContext=#{appContext},
            appFile=#{appFile},
            appFilePath=#{appFilePath},
            appFileLength=#{appFileLength},
            appFileDate=#{appFileDate},
            appContext2=#{appContext2},
            appFile2=#{appFile2},
            appFilePath2=#{appFilePath2},
            appFileLength2=#{appFileLength2},
            appFileDate2=#{appFileDate2},
            appFileUpdated=#{appFileUpdated},
            environment=#{environment},
            cpus=#{cpus},
            memory=#{memory},
            `scale`=#{scale},
            resources=#{resources},
            envs=#{envs},
            autoScaleConf=#{autoScaleConf},
            updateDate=CURRENT_TIMESTAMP
        WHERE id = #{id} and version = #{version}
    </update>

    <update id="setAppFileUpdatedDone" parameterType="map">
        UPDATE apps
        SET appFileUpdated='N'
        WHERE id = #{id} and version = #{version}
    </update>

    <update id="setAppUse" parameterType="map">
        UPDATE apps
        SET currentUse='Y'
        WHERE id = #{id} and version = #{version}
    </update>

    <update id="setAppNotUse" parameterType="map">
        UPDATE apps
        SET currentUse='N'
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM apps
        WHERE id = #{id}
    </delete>

    <delete id="deleteVersion" parameterType="map">
        DELETE FROM apps
        WHERE id = #{id} and version = #{version}
    </delete>

    <delete id="truncate">
        truncate table apps
    </delete>
</mapper>